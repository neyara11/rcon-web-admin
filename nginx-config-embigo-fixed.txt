##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

server {
        server_name www.embigo.ru;
        return 301 $scheme://embigo.ru$request_uri;
    }


server {
        listen 80;
        server_name embigo.ru;
        return 301 https://$host$request_uri;
    }

server {
        server_name embigo.ru;
        # SSL configuration
        #

        listen 443 ssl http2;
        ssl_certificate    /etc/letsencrypt/live/embigo.ru-0001/fullchain.pem;
        ssl_certificate_key    /etc/letsencrypt/live/embigo.ru-0001/privkey.pem;

        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /var/www/embigo.ru;

        # Add index.php to the list if you are using PHP
        index index.php index.html index.htm index.nginx-debian.html;

        server_name _;

        # Прокси-настройки для rcon-web-admin - ДОЛЖНЫ БЫТЬ ПЕРЕД общими правилами для статических файлов
        location /rwa/ {
            proxy_pass http://127.0.0.1:4326/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
            # Передаем информацию о префиксе URL
            proxy_set_header X-Script-Name /rwa;
        }

        # Прокси-настройки для WebSocket rcon-web-admin
        location ~ ^/rwa-ws {
            proxy_pass http://127.0.0.1:4327;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Правила для других приложений до общих правил для статических файлов
        #Бот ТГ rndtgbot
       location /rndtgbot {
            proxy_pass http://127.0.0.1:5000/rndtgbot;  # Web App работает на порту 5000
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Важно для Web App
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # Отдельная настройка для API запросов
        location /rndtgbot/api/ {
            proxy_pass http://127.0.0.1:5000/rndtgbot/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        #Мониторинг
        #Prometheus
        location /prometheus/ {
        access_log off;
        auth_basic "Restricted area";
        auth_basic_user_file /etc/nginx/auth.basic;
        #       rewrite /prometheus/(.*) /$1  break;
            proxy_pass http://127.0.0.1:9090/prometheus/;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        #Grafana
        location /grafana/ {
        #access_log off;
        proxy_set_header Authorization $http_authorization;  # Добавь это!
        auth_basic "Restricted area";
        auth_basic_user_file /etc/nginx/auth.basic;
        proxy_http_version 1.1;
          proxy_pass http://127.0.0.1:3000;
        #  rewrite ^/grafana/?(.*) /$1 break;
          proxy_set_header   Host $host;

        }
          location /grafana/api/live/ {
        proxy_set_header Authorization $http_authorization;

        auth_basic "Restricted area";
        auth_basic_user_file /etc/nginx/auth.basic;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_pass http://127.0.0.1:3000;
          }

        # Правила для статических файлов после всех proxy_pass правил
        location ~* \.(css|png|webp|jpg|jpeg|mp4|woff2|woff)$ {
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        location ~* ^/(js|vendor|well)/.*\.js$ {
            expires 30d;
            add_header Cache-Control "public, immutable";
            # Без proxy_pass — это статические файлы с диска или другого источника
        }

        # Правила для остальных запросов
        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ $uri.php$is_args$args;
    #               try_files $uri $uri/ =404;
        }
    location ~ ^/clans/ {
      deny all;
    }

        # pass PHP scripts to FastCGI server
        #
        location ~ \.php$ {
                include snippets/fastcgi-php.conf;
        #
        # With php-fpm (or other unix sockets):
        fastcgi_pass unix:/run/php/php-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        }
    location ~ /.svn/ {
      deny all;
    }
    location ~ /.git/ {
      deny all;
    }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
}